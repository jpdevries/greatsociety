package com.gs.components {	/**	 * Copyright (c) 2011 JP DeVries, Nemo Design	 * 	 * Permission is hereby granted, free of charge, to any person	 * obtaining a copy of this software and associated documentation	 * files (the "Software"), to deal in the Software without	 * restriction, including without limitation the rights to use,	 * copy, modify, merge, publish, distribute, sublicense, and/or sell	 * copies of the Software, and to permit persons to whom the	 * Software is furnished to do so, subject to the following	 * conditions:	 * 	 * The above copyright notice and this permission notice shall be	 * included in all copies or substantial portions of the Software.	 * 	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,	 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES	 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND	 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT	 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,	 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING	 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR	 * OTHER DEALINGS IN THE SOFTWARE.	 *	 *	@langversion ActionScript 3.0	 *	@playerversion Flash 10.0	 *	@author JP DeVries	 *	@since 05/19/11	 *	@description  	 */	// Native Imports	import flash.display.*;	import flash.media.*;	// 2nd Party Imports	import com.trycatch.media.*;	import com.trycatch.utils.*;		import com.greensock.*;	import com.greensock.easing.*;	/**   */	public class ProjectorClip extends AudioClip {		/** The name of the class */		public static const CLASSNAME:String = "ProjectorClip";		/** If false this class will suspend trace statements */		public static var doTrace:Boolean = true;		/** The full classPath */		public static function get classPath() : String {			return "com.gs.components" + CLASSNAME;		}				/**  */		public var smallShade:Sprite;				/**  */		public var projectorMask:Sprite;				private var _origShadeY:Number = 68;		/** ProjectorClip constructor */		public function ProjectorClip() : void {			super();			//if(doTrace) DebugUtils.log("ProjectorClip instantiated");			_origShadeY = smallShade.y;		}				/**		* 		* @param			*/		public function open() : void {			//if(doTrace) DebugUtils.log("doMouseUp called >> " + classPath);			trace("doMouseUp from ProjectorClip");			var _x:TweenLite = new TweenLite(smallShade, 0.3, {delay:0,y:100,ease:'Quad.easeInOut'});						_rolloverSoundChannel = _playSound(new PoliceOverSound(), _rolloverSoundChannel);		}				/**		* 		* @param			*/		public function close() : void {			if(doTrace) DebugUtils.log("close called >> " + classPath);			var _x:TweenLite = new TweenLite(smallShade, 0.5, {delay:0,y:_origShadeY,ease:'Quad.easeIn'});						_rolloutSoundChannel = _playSound(new PoliceOutSound(), _rolloutSoundChannel);		}					}}