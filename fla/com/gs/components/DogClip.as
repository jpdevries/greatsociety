package com.gs.components {	/**	 * Copyright (c) 2011 JP DeVries, Nemo Design	 * 	 * Permission is hereby granted, free of charge, to any person	 * obtaining a copy of this software and associated documentation	 * files (the "Software"), to deal in the Software without	 * restriction, including without limitation the rights to use,	 * copy, modify, merge, publish, distribute, sublicense, and/or sell	 * copies of the Software, and to permit persons to whom the	 * Software is furnished to do so, subject to the following	 * conditions:	 * 	 * The above copyright notice and this permission notice shall be	 * included in all copies or substantial portions of the Software.	 * 	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,	 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES	 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND	 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT	 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,	 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING	 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR	 * OTHER DEALINGS IN THE SOFTWARE.	 *	 *	@langversion ActionScript 3.0	 *	@playerversion Flash 10.0	 *	@author JP DeVries	 *	@since 06/01/11	 *	@description  	 */	// Native Imports	import flash.display.*;	import flash.events.*;	import flash.media.*;		import com.greensock.*;	import com.greensock.easing.*;	// 2nd Party Imports	import com.trycatch.geom.*;	import com.trycatch.media.*;	import com.trycatch.utils.*;	/**   */	public class DogClip extends AudioClip {		/** The name of the class */		public static const CLASSNAME:String = "DogClip";		/** If false this class will suspend trace statements */		public static var doTrace:Boolean = false;				public static const OUTRO_COMPLETE:String = "outro_complete";		/** The full classPath */		public static function get classPath() : String {			return "com.gs.components" + CLASSNAME;		}				/**  */		public var backBtn:Sprite;				/**  */		public var bhagwanDog:Sprite;				/**  */		/*public var cooperDog:Sprite;*/				/**  */		public var victorDog:Sprite;				/**  */		public var braxatoo:Sprite;				/**  */		public var frostyDog:Object;				/**  */		public var victorStamp:Sprite;				/**  */		public var bhagwanStamp:Sprite;						/**  */		public var clementineDog:Sprite;				private var _backBtnOrig:PropSet;		private var _victorDogOrig:PropSet;		private var _bhagwanDogOrig:PropSet;		private var _clementineDogOrig:PropSet;		private var _braxatooDogOrig:PropSet;		private var _buttercupDogOrig:PropSet;		private var _frostyDogOrig:PropSet;		private var _victorStampOrig:PropSet;		private var _bhagwanStampOrig:PropSet;				private var  _speed:Number = 0.565;		/*private var _cooperDogOrig:PropSet;*/						/** DogClip constructor */		public function DogClip() : void {			super();			//if(doTrace) DebugUtils.log("DogClip instantiated");						// store the original coordinates			_backBtnOrig 		= new PropSet(backBtn.x,		backBtn.y,			backBtn.rotation);			_victorDogOrig 		= new PropSet(victorDog.x, 		victorDog.y, 		victorDog.rotation);			_bhagwanDogOrig 	= new PropSet(bhagwanDog.x, 	bhagwanDog.y, 		bhagwanDog.rotation);			_clementineDogOrig 	= new PropSet(clementineDog.x, 	clementineDog.y,	clementineDog.rotation);			_braxatooDogOrig 	= new PropSet(braxatoo.x, 	braxatoo.y,	braxatoo.rotation);			_buttercupDogOrig 	= new PropSet(buttercup.x, 	buttercup.y,	buttercup.rotation);			_frostyDogOrig 	= new PropSet(frostyDog.x, 	frostyDog.y,	frostyDog.rotation);			_victorStampOrig 	= new PropSet(victorStamp.x, 	victorStamp.y,	victorStamp.rotation);			_bhagwanStampOrig 	= new PropSet(bhagwanStamp.x, 	bhagwanStamp.y,	bhagwanStamp.rotation);									/*_cooperDogOrig 		= new PropSet(cooperDog.x, 		cooperDog.y, 		cooperDog.rotation);*/														}				private function _handleBackClicked(e:MouseEvent) : void {			doOutro();		}				/**		* 		* @param			*/		public function doIntro() : void {			//if(doTrace) DebugUtils.log("doIntro called >> " + classPath);			DOUtils.enableClipCursor(backBtn);			backBtn.addEventListener(MouseEvent.MOUSE_UP, _handleBackClicked);						TweenLite.to(victorDog,MathUtils.randomRange(0.6 * _speed, 0.9 * _speed),{rotation:3,y:-21,x:MathUtils.randomRange(-272, -276),ease:'Quad.easeIn',delay:MathUtils.randomRange(0,0.3),onStart:function(){ _playSound(new BarkA()); }});			TweenLite.to(bhagwanDog,MathUtils.randomRange(0.6  * _speed, 0.8 * _speed),{rotation:0,y:-4,x:MathUtils.randomRange(30, 36),ease:'Quad.easeIn',delay:MathUtils.randomRange(0,0.3),onComplete:function(){ _playSound(new BarkB()); }});			TweenLite.to(clementineDog,MathUtils.randomRange(0.6  * _speed, 0.8 * _speed),{rotation:1,y:MathUtils.randomRange(58, 61) - 30,x:173,ease:'Quad.easeIn',delay:MathUtils.randomRange(0,0.3),onStart:function(){ _playSound(new BarkC()); }});						TweenLite.to(braxatoo,MathUtils.randomRange(0.6  * _speed, 0.8 * _speed),{x:-600,y:55.6,rotation:MathUtils.randomRange(-2, 2),ease:'Quad.easeIn',delay:MathUtils.randomRange(0,0.3),onComplete:function(){ _playSound(new BarkC()); }});			TweenLite.to(buttercup,MathUtils.randomRange(0.6  * _speed, 0.8 * _speed),{x:-422,rotation:-0.5,y:MathUtils.randomRange(10, 14),ease:'Quad.easeIn',delay:MathUtils.randomRange(0.5,0.7),onComplete:function(){ _playSound(new Sloth(),null,0,0,new SoundTransform(0.75)); }});			TweenLite.to(frostyDog,MathUtils.randomRange(0.6  * _speed, 0.8 * _speed),{rotation:0,y:2,x:MathUtils.randomRange(-120, -124),ease:'Quad.easeIn',delay:MathUtils.randomRange(0,0.3),onComplete:function(){ _playSound(new BarkD()); }});						TweenLite.to(victorStamp,MathUtils.randomRange(0.6 * _speed, 0.9 * _speed),{rotation:0,y:86,x:MathUtils.randomRange(-330, -324),ease:'Quad.easeIn',delay:MathUtils.randomRange(0.3,0.6)});			TweenLite.to(bhagwanStamp,MathUtils.randomRange(0.6  * _speed, 0.8 * _speed),{rotation:16,y:75,x:MathUtils.randomRange(137, 130),ease:'Quad.easeIn',delay:MathUtils.randomRange(0.2,0.4)});						//TweenLite.to(cooperDog,MathUtils.randomRange(0.6, 0.8),{rotation:0,y:MathUtils.randomRange(86, 90),x:MathUtils.randomRange(_cooperDogOrig.x - 27, _cooperDogOrig.x - 33),ease:'Quad.easeIn',delay:MathUtils.randomRange(0,0.3)});			TweenLite.to(backBtn,MathUtils.randomRange(0.6  * _speed, 0.9 * _speed),{rotation:-3,y:196,ease:'Quad.easeIn',delay:MathUtils.randomRange(0,0.3)});		}				/**		* 		* @param			*/		public function doOutro() : void {			//if(doTrace) DebugUtils.log("doIntro called >> " + classPath);			DOUtils.disableClipCursor(backBtn);			backBtn.removeEventListener(MouseEvent.MOUSE_UP, _handleBackClicked);						TweenLite.to(backBtn,MathUtils.randomRange(0.6  * _speed, 0.9  * _speed),{rotation:_backBtnOrig.rotation,y:_backBtnOrig.y,ease:'Quad.easeIn',delay:0});			TweenLite.to(victorDog,MathUtils.randomRange(0.45  * _speed, 0.75  * _speed),{rotation:_victorDogOrig.rotation,y:_victorDogOrig.y,x:_victorDogOrig.x,ease:'Quad.easeIn',delay:MathUtils.randomRange(0.5,0.8)});			TweenLite.to(bhagwanDog,MathUtils.randomRange(0.45 * _speed, 0.75  * _speed),{rotation:_bhagwanDogOrig.rotation, y:_bhagwanDogOrig.y, x:_bhagwanDogOrig.x,ease:'Quad.easeIn',delay:MathUtils.randomRange(0.6,0.8),onStart:function(){ _playSound(new WhooshA()); }});			TweenLite.to(clementineDog,MathUtils.randomRange(0.45 * _speed, 0.75  * _speed),{rotation:_clementineDogOrig.rotation,y:_clementineDogOrig.y,ease:'Quad.easeIn',delay:MathUtils.randomRange(0.4,0.8),onStart:function(){ _playSound(new WhooshB()); }});						TweenLite.to(braxatoo,MathUtils.randomRange(0.45 * _speed, 0.75  * _speed),{rotation:_braxatooDogOrig.rotation,y:_braxatooDogOrig.y,x:_braxatooDogOrig.x,ease:'Quad.easeIn',delay:MathUtils.randomRange(0.4,0.8),onStart:function(){ _playSound(new WhooshC()); }});			TweenLite.to(buttercup,MathUtils.randomRange(0.45 * _speed, 0.75  * _speed),{rotation:_buttercupDogOrig.rotation,y:_buttercupDogOrig.y,x:_buttercupDogOrig.x,ease:'Quad.easeIn',delay:MathUtils.randomRange(0.4,0.8),onStart:function(){ _playSound(new WhooshD()); }});			TweenLite.to(frostyDog,MathUtils.randomRange(0.45 * _speed, 0.75  * _speed),{rotation:_frostyDogOrig.rotation,y:_frostyDogOrig.y,x:_frostyDogOrig.x,ease:'Quad.easeIn',delay:MathUtils.randomRange(0.4,0.8),onStart:function(){ _playSound(new WhooshE()); }});						TweenLite.to(victorStamp,MathUtils.randomRange(0.45  * _speed, 0.75  * _speed),{rotation:_victorStampOrig.rotation,y:_victorStampOrig.y,x:_victorStampOrig.x,ease:'Quad.easeIn',delay:MathUtils.randomRange(0.5,0.8),onStart:function(){ _playSound(new WhooshA()); }});			TweenLite.to(bhagwanStamp,MathUtils.randomRange(0.45 * _speed, 0.75  * _speed),{rotation:_bhagwanStampOrig.rotation, y:_bhagwanStampOrig.y, x:_bhagwanStampOrig.x,ease:'Quad.easeIn',delay:MathUtils.randomRange(0.6,0.8),onComplete:function(){				dispatchEvent(new Event(OUTRO_COMPLETE));				_playSound(new WhooshA());			}}); 									//TweenLite.to(cooperDog,MathUtils.randomRange(0.45, 0.75),{rotation:_cooperDogOrig.rotation,y:_cooperDogOrig.y,x:_cooperDogOrig.x,ease:'Quad.easeIn',delay:MathUtils.randomRange(0.4,0.5)});		}					}}